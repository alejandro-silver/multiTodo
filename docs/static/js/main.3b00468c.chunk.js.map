{"version":3,"sources":["actions/types.js","reducers/todoReducer.js","reducers/index.js","components/ModalEdit.js","actions/todoActions.js","components/TodoList.js","actions/listActions.js","components/MultiLists.js","Pages/MainPage.js","App.js","serviceWorker.js","index.js","store.js"],"names":["ADD_TODO","DELETE_TODO","EDIT_TODO","CROSS_TODO","ADD_LIST","DELETE_LIST","state","JSON","parse","localStorage","getItem","stateInit","lists","combineReducers","todo","arguments","length","undefined","action","Object","objectSpread","type","_action$payload","payload","id","completed","idList","trim","map","list","concat","_action$payload2","todoChanged","_action$payload3","_action$payload4","filter","ModalEdit","show","onChange","e","_this","setState","defineProperty","target","name","value","editTodo","preventDefault","props","handleShow","handleClose","_this2","this","_this$props","react_default","a","createElement","Fragment","Button_default","style","width","variant","onClick","Modal_default","onHide","Header","closeButton","Title","className","Form_default","Label","inline","Group","Control","placeholder","Footer","Component","connect","dispatch","TodoList","deleteTodo","deleteList","addTodo","crossTodo","onSubmit","ListGroup_default","key","Item","components_ModalEdit","uuid","MultiLists","es_Container","Row_default","Col_default","md","components_TodoList","MainPage","setItem","stringify","Container_default","Form","addList","components_MultiLists","App","Pages_MainPage","Boolean","window","location","hostname","match","ReactDOM","render","react_redux_es","store","preloadedState","middlewares","thunkMiddleware","enhancers","applyMiddleware","apply","__REDUX_DEVTOOLS_EXTENSION__","composedEnhancers","compose","createStore","rootReducer","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3b00468c.chunk.js","sourcesContent":["export const ADD_TODO = \"ADD_TODO\";\nexport const DELETE_TODO = \"DELETE_TODO\";\nexport const EDIT_TODO = \"EDIT_TODO\";\nexport const CROSS_TODO = \"CROSS_TODO\";\nexport const ADD_LIST = \"ADD_LIST\";\nexport const DELETE_LIST = \"DELETE_LIST\";\n","import {\n  ADD_LIST,\n  ADD_TODO,\n  CROSS_TODO,\n  DELETE_LIST,\n  DELETE_TODO,\n  EDIT_TODO\n} from \"../actions/types\";\n\nconst state = JSON.parse(localStorage.getItem(\"MultiTodo\"));\n\nconst stateInit = state\n  ? state\n  : {\n      lists: []\n    };\n\nexport default function todoReducer(state = stateInit, action) {\n  state = { ...state };\n  switch (action.type) {\n    case ADD_TODO:\n      const { id, todo, completed, idList } = action.payload;\n      if (todo.trim().length === 0) return { ...state };\n      return {\n        ...state,\n        lists: state.lists.map(list =>\n          list.id === idList\n            ? { ...list, todo: list.todo.concat({ id, todo, completed }) }\n            : { ...list }\n        )\n      };\n    case EDIT_TODO: {\n      const { id, todoChanged, idList } = action.payload;\n      if (todoChanged.trim().length === 0) return { ...state };\n      return {\n        ...state,\n        lists: state.lists.map(list =>\n          list.id === idList\n            ? {\n                ...list,\n                todo: list.todo.map(todo =>\n                  todo.id === id ? { ...todo, todo: todoChanged } : { ...todo }\n                )\n              }\n            : { ...list }\n        )\n      };\n    }\n    case CROSS_TODO: {\n      const { id, idList } = action.payload;\n      return {\n        ...state,\n        lists: state.lists.map(list =>\n          list.id === idList\n            ? {\n                ...list,\n                todo: list.todo.map(todo =>\n                  todo.id === id\n                    ? { ...todo, completed: !todo.completed }\n                    : { ...todo }\n                )\n              }\n            : { ...list }\n        )\n      };\n    }\n    case DELETE_TODO: {\n      const { id, idList } = action.payload;\n      return {\n        ...state,\n        lists: state.lists.map(list =>\n          list.id === idList\n            ? { ...list, todo: list.todo.filter(todo => todo.id !== id) }\n            : { ...list }\n        )\n      };\n    }\n    case ADD_LIST: {\n      return {\n        ...state,\n        lists: state.lists.concat({ id: action.payload.id, todo: [] })\n      };\n    }\n    case DELETE_LIST: {\n      return {\n        ...state,\n        lists: state.lists.filter(list => list.id !== action.payload.idList)\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport todoReducer from \"./todoReducer\";\n\nexport default combineReducers({\n  todo: todoReducer\n});\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Form from \"react-bootstrap/Form\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport { editTodo } from \"../actions/todoActions\";\n\nclass ModalEdit extends Component {\n  state = {\n    show: false,\n    todo: \"\"\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  editTodo = (e, id, idList) => {\n    e.preventDefault();\n    const { editTodo } = this.props;\n    const { todo } = this.state;\n    editTodo(id, idList, todo);\n    this.setState({ todo: \"\" });\n    this.setState({ show: false });\n  };\n  handleShow = () => {\n    this.setState({ show: true });\n  };\n  handleClose = () => {\n    this.setState({ show: false });\n  };\n  render() {\n    const { todo, idList } = this.props;\n    return (\n      <>\n        <Button\n          style={{ width: \"15%\" }}\n          variant=\"primary\"\n          onClick={this.handleShow}\n        >\n          Edit\n        </Button>\n\n        <Modal show={this.state.show} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title className=\"justify-content-center\">\n              Modal heading\n            </Modal.Title>\n          </Modal.Header>\n          <Form.Label className=\"text-center\">Edit Todo</Form.Label>\n          <Form inline={true}>\n            <Form.Group className=\"m-0\" style={{ width: \"100%\" }}>\n              <Form.Control\n                id=\"todo\"\n                name=\"todo\"\n                className=\"m-0\"\n                style={{ width: \"100%\" }}\n                type=\"text\"\n                value={this.state.todo}\n                placeholder={`${todo.todo}`}\n                onChange={this.onChange}\n              />\n            </Form.Group>\n          </Form>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={this.handleClose}>\n              Close\n            </Button>\n            <Button\n              variant=\"primary\"\n              onClick={e => this.editTodo(e, todo.id, idList)}\n            >\n              Save Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { editTodo }\n)(ModalEdit);\n","import {\n  ADD_TODO,\n  DELETE_TODO,\n  EDIT_TODO,\n  CROSS_TODO,\n  INIT_STORE\n} from \"./types\";\nimport uuid from \"uuid\";\n\nexport const deleteTodo = (id, idList) => dispatch => {\n  dispatch({\n    type: DELETE_TODO,\n    payload: { id, idList }\n  });\n};\n\nexport const addTodo = (todo, idList) => dispatch => {\n  dispatch({\n    type: ADD_TODO,\n    payload: {\n      id: uuid(),\n      idList,\n      todo,\n      completed: false\n    }\n  });\n};\n\nexport const editTodo = (id, idList, todo) => dispatch => {\n  dispatch({\n    type: EDIT_TODO,\n    payload: {\n      id,\n      idList,\n      todoChanged: todo,\n      completed: false\n    }\n  });\n};\n\nexport const crossTodo = (id, idList) => dispatch => {\n  dispatch({\n    type: CROSS_TODO,\n    payload: {\n      id,\n      idList\n    }\n  });\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport ModalEdit from \"./ModalEdit\";\nimport { deleteTodo, addTodo, crossTodo } from \"../actions/todoActions\";\nimport { deleteList } from \"../actions/listActions\";\n\nclass TodoList extends Component {\n  state = {\n    todo: \"\"\n  };\n  deleteTodo = (id, idList) => {\n    const { deleteTodo } = this.props;\n    deleteTodo(id, idList);\n  };\n  deleteList = idList => {\n    const { deleteList } = this.props;\n    deleteList(idList);\n  };\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  addTodo = (e, idList) => {\n    e.preventDefault();\n    const { addTodo } = this.props;\n    const { todo } = this.state;\n    addTodo(todo, idList);\n    this.setState({ todo: \"\" });\n  };\n  crossTodo = (id, idList) => {\n    const { crossTodo } = this.props;\n    crossTodo(id, idList);\n  };\n\n  render() {\n    const { todo, idList } = this.props;\n    return (\n      <>\n        <Form.Label>Add Todo</Form.Label>\n\n        <Form inline={true} onSubmit={e => this.addTodo(e, idList)}>\n          <Form.Group className=\"m-0\" style={{ width: \"70%\" }}>\n            <Form.Control\n              id=\"todo\"\n              name=\"todo\"\n              className=\"m-0\"\n              style={{ width: \"100%\" }}\n              type=\"text\"\n              value={this.state.todo}\n              placeholder=\"Enter todo\"\n              onChange={this.onChange}\n            />\n          </Form.Group>\n          <Button style={{ width: \"30%\" }} variant=\"success\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n        <ListGroup>\n          {todo.length > 0\n            ? todo.map(todo => {\n                return (\n                  <Form inline key={todo.id}>\n                    <ListGroup.Item\n                      style={{ width: \"70%\" }}\n                      className={\n                        todo.completed ? \"text-success\" : \"text-danger\"\n                      }\n                      onClick={() => this.crossTodo(todo.id, idList)}\n                    >\n                      {todo.todo}\n                    </ListGroup.Item>\n                    <ModalEdit todo={todo} idList={idList} />\n                    <Button\n                      style={{ width: \"15%\" }}\n                      variant=\"danger\"\n                      type=\"button\"\n                      onClick={() => this.deleteTodo(todo.id, idList)}\n                    >\n                      Delete\n                    </Button>\n                  </Form>\n                );\n              })\n            : null}\n          <div className=\"text-right\">\n            <Button\n              style={{ width: \"100%\" }}\n              variant=\"danger\"\n              type=\"button\"\n              onClick={() => this.deleteList(idList)}\n            >\n              Delete Todo List\n            </Button>\n          </div>\n        </ListGroup>\n      </>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { deleteTodo, addTodo, crossTodo, deleteList }\n)(TodoList);\n","import { ADD_LIST, DELETE_LIST } from \"./types\";\nimport uuid from \"uuid\";\n\nexport const deleteList = idList => dispatch => {\n  dispatch({\n    type: DELETE_LIST,\n    payload: {\n      idList\n    }\n  });\n};\n\nexport const addList = () => dispatch => {\n  dispatch({\n    type: ADD_LIST,\n    payload: {\n      id: uuid(),\n      list: { lists: [] }\n    }\n  });\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Container from \"react-bootstrap/es/Container\";\nimport TodoList from \"./TodoList\";\n\nclass MultiLists extends Component {\n  render() {\n    return (\n      <>\n        <Container>\n          <Row style={{ width: \"100%\" }}>\n            {this.props.list.lists.length > 0\n              ? this.props.list.lists.map(list => {\n                  return (\n                    <Col md={6} key={list.id}>\n                      <TodoList todo={list.todo} idList={list.id} />\n                    </Col>\n                  );\n                })\n              : \"There are no lists\"}\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\nconst initMapStateToProps = state => {\n  return {\n    list: state.todo\n  };\n};\nexport default connect(\n  initMapStateToProps,\n  {}\n)(MultiLists);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/es/Form\";\nimport MultiLists from \"../components/MultiLists\";\nimport { addList } from \"../actions/listActions\";\n\nclass MainPage extends Component {\n  componentDidUpdate() {\n    localStorage.setItem(\"MultiTodo\", JSON.stringify(this.props.list));\n  }\n  render() {\n    return (\n      <>\n        <Container>\n          <Row>\n            <Col>Multi TodoLists without FireBase Created by Automedon</Col>\n            <Col>\n              {\" \"}\n              <Form className=\"text-right\">\n                <Button onClick={() => this.props.addList()}>\n                  Add new list\n                </Button>{\" \"}\n              </Form>\n            </Col>\n          </Row>\n          <MultiLists />\n        </Container>\n      </>\n    );\n  }\n}\nconst initMapStateToProps = state => {\n  return {\n    list: state.todo\n  };\n};\nexport default connect(\n  initMapStateToProps,\n  { addList }\n)(MainPage);\n","import React from \"react\";\nimport MainPage from \"./Pages/MainPage\";\n\nfunction App() {\n  return (\n    <div className=\"container justify-content-center \">\n      <MainPage />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store()}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nexport default function configureStore(preloadedState) {\n  const middlewares = [thunkMiddleware];\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n\n  const enhancers = [\n    middlewareEnhancer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  ];\n  const composedEnhancers = compose(...enhancers);\n\n  return createStore(rootReducer, preloadedState, composedEnhancers);\n}\n"],"sourceRoot":""}